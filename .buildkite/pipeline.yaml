steps:
- name: ":go::lint-roller: Lint"
  agents:
    queue: kubernetes
  plugins:
  - kubernetes:
      podSpec:
        containers:
        - image: golangci/golangci-lint:v1.52.0
          command:
          - golangci-lint
          args:
          - run
          - -v
          - --timeout 10m
- name: ":go::test_tube: Test"
  agents:
    queue: kubernetes
  plugins:
  - kubernetes:
      sidecars:
        - image: postgres:15-alpine
          env:
            - name: POSTGRES_PASSWORD
              value: password
      podSpec:
        containers:
        - image: golang:1.20.2-alpine
          env:
          - name: CGO_ENABLED
            value: "0"
          - name: DB_URL
            value: postgres://postgres:password@localhost:5432/postgres
          command:
          - go
          args:
          - test
          - ./...
- name: ":go::hammer: Build"
  agents:
    queue: kubernetes
  plugins:
  - kubernetes:
      podSpec:
        nodeSelector:
          kubernetes.io/arch: arm64
        serviceAccount: ecr-push
        containers:
        - name: docker
          image: buildkite/agent:3.45.0
          command: [.buildkite/steps/build.sh]
          volumeMounts:
          - name: buildkit-client
            mountPath: /buildkit/certs
        volumes:
        - name: buildkit-client
          secret:
            secretName: buildkit-client-certs
